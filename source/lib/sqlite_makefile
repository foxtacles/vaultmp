SRC_DIR = sqlite
OBJ_DIR = .objs/sqlite

CC = gcc
CXX = g++
AR = ar
LD = g++


INC = -I.
CFLAGS = -Wall -ansi -pedantic
CFLAGSEXT = -fPIC

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
CFLAGSEXT_RELEASE = $(CFLAGSEXT)
OBJDIR_RELEASE = $(OBJ_DIR)/Release
DEP_RELEASE =
OUT_RELEASE = $(SRC_DIR)/libsqlite3.a

C_FILES = $(wildcard $(SRC_DIR)/*.c)
OBJ_RELEASE = $(addprefix $(OBJDIR_RELEASE)/,$(notdir $(C_FILES:.c=.o)))

RD = rm -rf
DEL = $(RD)
MKDIR = mkdir -p
FixPath= $1

ifneq ($(shell uname -s), Linux)
	ifneq ($(shell uname -o), Cygwin)
		ifneq ($(shell uname -o), Msys)
			FixPath = $(subst /,\,$1)
			RD = rd /s/q
			DEL = del /q
			MKDIR = md
			CFLAGSEXT =
		endif
	endif
endif

all: release

clean: clean_release

before_release:
ifneq ($(wildcard $(OBJDIR_RELEASE)/.*),)
	echo "Found " $(OBJDIR_RELEASE)
else
	$(MKDIR) $(call FixPath,$(OBJDIR_RELEASE))
endif

after_release:
	
release: before_release out_release after_release

out_release: $(OBJ_RELEASE) $(DEP_RELEASE)
	$(AR) -rv $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS_RELEASE) $(CFLAGSEXT_RELEASE) $(INC_RELEASE) -c $< -o $@

clean_release:
ifneq ($(wildcard $(call FixPath,$(OUT_RELEASE))),)
	$(DEL) $(call FixPath,$(OUT_RELEASE)) 
endif

.PHONY: before_release after_release clean_release